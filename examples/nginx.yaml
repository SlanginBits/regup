
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      # Demo Nginx Container
      - name: nginx
        image: nginx
        ports:
        - name: http
          containerPort: 80
  
      # Regup Sidekick Container (Regsiter pods in consul)
      - name: regup
        image: docker.io/spunon/regup:v1
        imagePullPolicy: Always
        env:
        # *Required - IP of the host node, assumes consul agent is running on the node where 
        # the pod will be deployed with hostNetwork set to true.
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        # IP of the pod - *Required if used for ADDRESS_TYPE below
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # *Required - Register service with this address, (POD/NODE)
        - name: ADDRESS_TYPE
          value: "POD"
        # *Required - Name of the service you'd like to register
        - name: SERVICE_NAME
          value: "nginx"
        # *Required - Port you'd like to register for your service
        - name: SERVICE_PORT
          value: "80"
        # *Required (If using health check) - Type of health check, currently supports native
        # HTTP, TCP checking as well as Script
        - name: HEALTH_TYPE
          value: "Script"
        # Unique id to be appended to your service id in consul
        # Helpful when you're registering multiple instance of the same service on one node (eg.minikube)
        - name: UNIQUE_ID
          value: "0"
        # *Required (If using HTTP/TCP checks) - HTTP/TCP endpoint for the healthcheck to query
        # NOTE: SERVICE_IP will be either POD_IP or NODE_IP depending on ADDRESS_TYPE
        - name: HEALTH_ENDPOINT
          value: "http://${SERVICE_IP}:${SERVICE_PORT}"
        # *Required (If using Script check) - Script that determines service health
        # NOTE: To be used in place of HEALTH_ENDPOINT with health check type of Script
        # Script exit status code 0 satisfies the health check, all other exit codes fail
        - name: HEALTH_SCRIPT
          value: "curl -sI http://${SERVICE_IP}:${SERVICE_PORT} | grep HTTP | grep 200"
        # Deregister if service is unhealthy for a specififed length of time (default 1m)
        - name: HEALTH_DEREGISTER_AFTER
          value: "1m"
        # Interval to query the HEALTH_ENDPOINT (default 10s)
        - name: HEALTH_INTERVAL
          value: "10s"
        # Timeout for query of HEALTH_ENDPOINT (default 1s)
        - name: HEALTH_TIMEOUT
          value: "1s"
        # Skip TLS verification (default true)
        - name: HEALTH_TLS_SKIP_VERIFY
          value: "true"
        # Consul Protocol (default http)
        - name: CONSUL_PROTOCOL
          value: "http"
